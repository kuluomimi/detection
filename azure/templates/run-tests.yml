steps:
  - bash: |
      make install-python
    workingDirectory: $(Pipeline.Workspace)/s/$(SERVICE_NAME)/$(SERVICE_ARTIFACT_NAME)
    displayName: Setup pytests
    condition: always()

  - bash: |
      export RELEASE_RELEASEID=$(Build.BuildId)
      export SOURCE_COMMIT_ID=$(Build.SourceVersion)
      export APIGEE_ENVIRONMENT="$(ENVIRONMENT)"
      export SERVICE_BASE_PATH="$(SERVICE_BASE_PATH)"
      export APIGEE_ACCESS_TOKEN="$(secret.AccessToken)"
      export PROXY_NAME="$(PROXY_NAME)"
      export STATUS_ENDPOINT_API_KEY="$(status-endpoint-api-key)"
      
      if [[ $APIGEE_ENVIRONMENT =~ .*-*sandbox ]]
      then
       poetry run pytest -v -m "not auth" --api-name=gp-connect-access-record-fhir --proxy-name=$PROXY_NAME -o junit_logging=all --junitxml=test-report.xml
      else
       poetry run pytest -v -o junit_logging=all --junitxml=test-report.xml
      fi
    workingDirectory: "$(Pipeline.Workspace)/s/$(SERVICE_NAME)/$(SERVICE_ARTIFACT_NAME)/tests"
    displayName: Run full test suite
  - task: PublishTestResults@2
    displayName: 'Publish test results'
    condition: always()
    inputs:
      testResultsFiles: '$(Pipeline.Workspace)/s/$(SERVICE_NAME)/$(SERVICE_ARTIFACT_NAME)/tests/test-report.xml'
      failTaskOnFailedTests: true
